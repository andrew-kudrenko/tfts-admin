{"version":3,"sources":["components/Navbar.jsx","components/Layout.jsx","components/ButtonCreate.jsx","components/Loader.jsx","components/AlertDismissible.jsx","utils/api.js","hoc/withState.jsx","pages/TasksList.jsx","hoc/withCategoriesState.jsx","pages/CategoriesList.jsx","components/ModalPrompt.jsx","components/EditTaskForm.jsx","pages/EditTask.jsx","components/EditCategoryForm.jsx","pages/EditCategory.jsx","pages/CreateCategory.jsx","pages/CreateTask.jsx","pages/Home.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Navbar","bg","variant","expand","Container","to","Brand","Toggle","aria-controls","Collapse","id","Nav","className","children","Row","Col","sm","lg","xl","Button","size","icon","faPlusCircle","Spinner","animation","title","useState","show","setShow","Alert","onClose","dismissible","Heading","url","updateData","endPoint","body","a","fetch","concat","method","headers","console","log","Component","categories","setCategories","tasks","setTasks","hasError","setHasError","useEffect","length","then","response","json","data","_","catch","AlertDismissible","withState","ButtonCreate","map","category","Fragment","key","alias","ListGroup","filter","task","_id","ListGroupItem","Loader","withCategoriesState","isShowing","acceptHandler","cancelHandler","pending","setPending","completed","setCompleted","handleClose","handleCloseWithAwait","setTimeout","Modal","onHide","Header","closeButton","Title","Body","Footer","onClick","removingEndPoint","setTitle","setCategory","condition","setCondition","solution","setSolution","showModal","setShowModal","promptHandler","JSON","stringify","deletingHandler","modalCallback","useRef","ModalPrompt","current","Form","Group","controlId","Label","Control","type","placeholder","value","onChange","event","target","readOnly","as","c","rows","withRouter","match","find","t","params","EditTaskForm","setAlias","img","setImg","preview","setPreview","description","setDescription","EditCategoryForm","MenuItem","App","Layout","exact","path","component","TasksList","CreateTask","EditTask","CategoriesList","CreateCategory","EditCategory","Home","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.7ff14fb5.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Navbar, Nav, Container } from 'react-bootstrap'\r\n\r\nexport default () => (\r\n  <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n    <Container>\r\n      <NavLink to=\"/home\">\r\n        <Navbar.Brand>TFTS Admin Panel</Navbar.Brand>\r\n      </NavLink>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"ml-auto\">\r\n          <NavLink to=\"/categories/\" className=\"nav-link\">\r\n            Категории\r\n          </NavLink>\r\n          <NavLink to=\"/tasks/\" className=\"nav-link\">\r\n            Задачи\r\n          </NavLink>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Container>\r\n  </Navbar>\r\n)","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nimport Navbar from './Navbar'\r\n\r\nexport default ({ children }) => (\r\n  <>\r\n    <Navbar />\r\n    <Container>\r\n      <Row className=\"py-3\">\r\n        <Col sm=\"10\" lg=\"8\" xl=\"7\" className=\"mx-auto\">\r\n          {children}\r\n        </Col>\r\n      </Row> \r\n    </Container>\r\n  </>\r\n)","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Button } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport default ({ to, children }) => (\r\n  <div className=\"d-flex justify-content-center mb-3\">\r\n    <NavLink to={to}>\r\n      <Button variant=\"info\" size=\"lg\">\r\n        {children}\r\n        <FontAwesomeIcon className=\"ml-2\" icon={faPlusCircle} />\r\n      </Button>\r\n    </NavLink>\r\n  </div>\r\n)","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nexport default () => (\r\n  <div className=\"d-flex justify-content-center\">\r\n    <Spinner animation=\"grow\" variant=\"danger\" className=\"mx-2\" />\r\n    <Spinner animation=\"grow\" variant=\"dark\" className=\"mx-2\" />\r\n    <Spinner animation=\"grow\" variant=\"warning\" className=\"mx-2\" />\r\n  </div>\r\n)","import React, { useState } from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nexport default ({ variant = 'danger', title, children }) => {\r\n  const [show, setShow] = useState(true)\r\n\r\n  return (\r\n    <Alert variant={variant} \r\n      onClose={() => setShow(false)} \r\n      show={show}\r\n      className=\"mx-auto\"\r\n      dismissible\r\n    >\r\n      <Alert.Heading>{title}</Alert.Heading>\r\n      <p>{children}</p>\r\n    </Alert>\r\n  )\r\n}","export const url = 'https://tfts-backend.herokuapp.com/api'\r\n\r\n// export const url = 'http://localhost:7000/api'\r\n\r\n\r\nexport const updateData = async (endPoint, body) => {\r\n  try {\r\n    await fetch(url.concat(endPoint), {\r\n      method: 'POST',\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body\r\n    })  \r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport AlertDismissible from '../components/AlertDismissible'\r\nimport { url } from '../utils/api'\r\n\r\n\r\nexport default Component => () => {\r\n  const [categories, setCategories] = useState([])\r\n  const [tasks, setTasks] = useState([])\r\n  const [hasError, setHasError] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (!categories.length) {\r\n      fetch(url.concat('/categories'))\r\n        .then(response => response.json())\r\n        .then(data => setCategories(data))\r\n        .then(_ => setHasError(false))\r\n        .catch(_ => setHasError(true))\r\n    }\r\n  }, [hasError, categories])\r\n\r\n  useEffect(() => {\r\n    if (!tasks.length) {\r\n      fetch(url.concat('/tasks'))\r\n        .then(response => response.json())\r\n        .then(data => setTasks(data))\r\n        .then(_ => setHasError(false))\r\n        .catch(_ => setHasError(true))\r\n    }\r\n  }, [hasError, tasks])\r\n\r\n  return (\r\n    hasError\r\n    ? <AlertDismissible title=\"Ошибка!\">\r\n        Произошла ошибка при получении данных с сервера\r\n      </AlertDismissible>\r\n    : <Component categories={categories} tasks={tasks} />\r\n  )\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { ListGroup, ListGroupItem } from 'react-bootstrap'\r\nimport ButtonCreate from '../components/ButtonCreate'\r\nimport Loader from '../components/Loader'\r\nimport withState from '../hoc/withState'\r\n\r\nconst TasksList = ({ tasks, categories }) => {\r\n  return (\r\n    <>\r\n      <h2 className=\"text-center\">Список задач</h2>\r\n      <hr />\r\n      <ButtonCreate to=\"create\">Новая задача</ButtonCreate>\r\n      {categories.length && tasks.length\r\n        ? categories.map(category => (\r\n          <React.Fragment key={category.alias}>\r\n            <h5 className=\"mb-3 text-info\">{category.title}</h5>\r\n            <ListGroup className=\"mb-3\">\r\n              {tasks.filter(task => task.category === category.alias).map(task => (\r\n                <NavLink to={`${task._id}`} className=\"text-dark\">\r\n                  <ListGroupItem className=\"mb-2 list-group-item-action\" key={task._id}>\r\n                    {task.title}\r\n                  </ListGroupItem>\r\n                </NavLink>\r\n              ))}\r\n            </ListGroup>\r\n          </React.Fragment>\r\n        ))\r\n        : <Loader />\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default withState(TasksList)","import React, { useState, useEffect } from 'react'\r\nimport AlertDismissible from '../components/AlertDismissible'\r\nimport { url } from '../utils/api'\r\n\r\n\r\nexport default Component => () => {\r\n  const [categories, setCategories] = useState([])\r\n  const [hasError, setHasError] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (!categories.length) {\r\n      fetch(url.concat('/categories'))\r\n        .then(response => response.json())\r\n        .then(data => setCategories(data))\r\n        .then(_ => setHasError(false))\r\n        .catch(_ => setHasError(true))\r\n    }\r\n  }, [hasError, categories])\r\n\r\n  return (\r\n    hasError\r\n    ? <AlertDismissible title=\"Ошибка!\">\r\n        Произошла ошибка при получении данных с сервера\r\n      </AlertDismissible>\r\n    : <Component categories={categories} />\r\n  )\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { ListGroup, ListGroupItem } from 'react-bootstrap'\r\nimport ButtonCreate from '../components/ButtonCreate'\r\nimport Loader from '../components/Loader'\r\nimport withCategoriesState from '../hoc/withCategoriesState'\r\n\r\nconst CategoriesList = ({ categories }) => (\r\n  <>\r\n    <h2 className=\"text-center\">Список категорий</h2>\r\n    <hr />\r\n    <ButtonCreate to=\"create\">Новая категория</ButtonCreate>\r\n    <ListGroup>\r\n      {\r\n        categories.length\r\n          ? categories.map(({ alias, title }) => (\r\n            <NavLink to={alias} key={alias} className=\"text-dark\">\r\n              <ListGroupItem className=\"mb-2 list-group-item-action\">\r\n                {title}\r\n              </ListGroupItem>\r\n            </NavLink>\r\n          ))\r\n          : <Loader />\r\n      }\r\n    </ListGroup>\r\n  </>\r\n)\r\n\r\nexport default withCategoriesState(CategoriesList)","import React, { useState } from 'react'\r\nimport { Modal, Button } from 'react-bootstrap'\r\n\r\nexport default ({ isShowing, acceptHandler, cancelHandler }) => {\r\n  const [show, setShow] = useState(isShowing)\r\n  const [hasError, setHasError] = useState(false)\r\n  const [pending, setPending] = useState(false)\r\n  const [completed, setCompleted] = useState(false)\r\n\r\n  const handleClose = () => {\r\n    setShow(false)\r\n    cancelHandler()\r\n  }\r\n\r\n  const handleCloseWithAwait = async () => {\r\n    setPending(true)\r\n\r\n    try {\r\n      await acceptHandler()\r\n      setCompleted(true)\r\n    } catch (e) {\r\n      setHasError(true)\r\n    } finally {\r\n      setPending(false)\r\n      setTimeout(() => cancelHandler(), 1500)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal show={show} onHide={handleClose}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Подтвердите действие</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <h6 className=\"font-weight-bold font-italic\">\r\n          <span className=\"font-weight-light mr-2\">Статус:</span>\r\n          {!pending && !completed && <span className=\"text-dark\">-</span>}\r\n          {pending && <span className=\"text-info\">Запрос к серверу...</span>}\r\n          {!hasError && completed && <span className=\"text-success\">Успешно!</span>}\r\n          {hasError && <span className=\"text-danger\">Произошла ошибка!</span>}\r\n        </h6>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"danger\" onClick={handleClose}>\r\n          Отмена\r\n        </Button>\r\n        <Button variant=\"success\" onClick={handleCloseWithAwait}>\r\n          Подтвердить\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  )\r\n}","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { updateData } from '../utils/api'\r\nimport ModalPrompt from '../components/ModalPrompt'\r\n\r\nexport default ({ task, categories, endPoint, removingEndPoint }) => {\r\n\r\n  const [title, setTitle] = useState() \r\n  const [category, setCategory] = useState() \r\n  const [condition, setCondition] = useState() \r\n  const [solution, setSolution] = useState()\r\n\r\n  const [showModal, setShowModal] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (task) {\r\n      setTitle(task.title)\r\n      setCategory(task.category)\r\n      setCondition(task.condition)\r\n      setSolution(task.solution)  \r\n    }\r\n  }, [task])\r\n\r\n  const promptHandler = async () => {\r\n    try {\r\n      await updateData(endPoint, JSON.stringify({ title, category, condition, solution, _id: task?._id }))\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  const deletingHandler = async () => {\r\n    try {\r\n      await updateData(removingEndPoint, JSON.stringify({ _id: task._id }))\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  const modalCallback = useRef(null)\r\n\r\n  const closeHandler = () => {\r\n    setShowModal(false)\r\n  }\r\n\r\n  return (\r\n    !showModal\r\n    ? <Form>\r\n      <Form.Group controlId=\"title\">\r\n        <Form.Label>Название</Form.Label>\r\n        <Form.Control type=\"text\"\r\n          placeholder=\"Название\"\r\n          value={title}\r\n          onChange={event => setTitle(event.target.value)}\r\n        />\r\n      </Form.Group>\r\n\r\n      {\r\n        task?._id &&\r\n        <Form.Group controlId=\"_id\" >\r\n          <Form.Label>Идентификатор</Form.Label>\r\n          <Form.Control type=\"text\"\r\n            value={task._id}\r\n            readOnly\r\n          />\r\n        </Form.Group>\r\n      }\r\n\r\n      <Form.Group controlId=\"category\">\r\n        <Form.Label>Категория</Form.Label>\r\n        <Form.Control as=\"select\" \r\n          value={category}\r\n          onChange={event => setCategory(event.target.value)}\r\n        >\r\n          {categories.map(c => <option value={c.alias}>{c.title}</option>)}\r\n        </Form.Control>\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"condition\">\r\n        <Form.Label>Условие</Form.Label>\r\n        <Form.Control as=\"textarea\"\r\n          rows=\"12\"\r\n          placeholder=\"Условие\"\r\n          value={condition}\r\n          onChange={event => setCondition(event.target.value)}\r\n        />\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"solution\">\r\n        <Form.Label>Решение</Form.Label>\r\n        <Form.Control as=\"textarea\"\r\n          rows=\"12\"\r\n          placeholder=\"Решение\"\r\n          value={solution}\r\n          onChange={event => setSolution(event.target.value)}\r\n        />\r\n      </Form.Group>\r\n\r\n      <div className=\"d-flex justify-content-center\">\r\n        <Button variant=\"outline-success\"\r\n          type=\"submit\"\r\n          size=\"lg\"\r\n          className=\"mx-2\"\r\n          onClick={() => {\r\n            modalCallback.current = promptHandler\r\n            setShowModal(true)\r\n          }}\r\n        >\r\n          Сохранить\r\n        </Button>\r\n\r\n        {\r\n          removingEndPoint &&\r\n          <Button variant=\"outline-danger\"\r\n          type=\"button\"\r\n          size=\"lg\"\r\n          className=\"mx-2\"\r\n          onClick={() => {\r\n            modalCallback.current = deletingHandler\r\n            setShowModal(true)\r\n          }}\r\n        >\r\n          Удалить\r\n        </Button>\r\n        }\r\n      </div>\r\n    </Form>\r\n    : <ModalPrompt isShowing={showModal} \r\n        acceptHandler={modalCallback.current}\r\n        cancelHandler={closeHandler} \r\n      />\r\n  )\r\n}","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport withState from '../hoc/withState'\r\n\r\nimport Loader from '../components/Loader'\r\nimport EditTaskForm from '../components/EditTaskForm'\r\n\r\nconst EditTask = ({ tasks, categories, match }) => {\r\n  const task = tasks.find(t => t._id === match.params.id)\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"text-center\">Редактирование задачи</h2>\r\n      <hr />\r\n      {\r\n        tasks.length && categories.length\r\n          ? <EditTaskForm task={task}\r\n            categories={categories}\r\n            endPoint=\"/tasks/update\"\r\n            removingEndPoint=\"/tasks/remove\"\r\n          />\r\n          : <Loader />\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default withState(withRouter(EditTask)) ","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { updateData } from '../utils/api'\r\nimport ModalPrompt from '../components/ModalPrompt'\r\n\r\nexport default ({ category, endPoint, removingEndPoint }) => {\r\n\r\n  const [title, setTitle] = useState()\r\n  const [alias, setAlias] = useState()\r\n  const [img, setImg] = useState()\r\n  const [preview, setPreview] = useState()\r\n  const [description, setDescription] = useState()\r\n\r\n  const [showModal, setShowModal] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (category) {\r\n      setTitle(category.title)\r\n      setAlias(category.alias)\r\n      setImg(category.img)\r\n      setPreview(category.preview)\r\n      setDescription(category.description)\r\n    }\r\n  }, [category])\r\n\r\n  const promptHandler = async () => {\r\n    try {\r\n      await updateData(endPoint, JSON.stringify({ title, alias, img, preview, description, _id: category?._id }))\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  const deletingHandler = async () => {\r\n    try {\r\n      await updateData(removingEndPoint, JSON.stringify({ _id: category._id }))\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  const modalCallback = useRef(null)\r\n\r\n  const closeHandler = () => {\r\n    setShowModal(false)\r\n  }\r\n\r\n  return (\r\n    !showModal\r\n      ? <Form>\r\n        <Form.Group controlId=\"title\">\r\n          <Form.Label>Название</Form.Label>\r\n          <Form.Control type=\"text\"\r\n            placeholder=\"Название\"\r\n            value={title}\r\n            onChange={event => setTitle(event.target.value)}\r\n          />\r\n        </Form.Group>\r\n\r\n        {\r\n          category?._id &&\r\n          <Form.Group controlId=\"_id\" >\r\n            <Form.Label>Идентификатор</Form.Label>\r\n            <Form.Control type=\"text\"\r\n              value={category._id}\r\n              readOnly\r\n            />\r\n          </Form.Group>\r\n        }\r\n\r\n        <Form.Group controlId=\"alias\">\r\n          <Form.Label>Псевдоним</Form.Label>\r\n          <Form.Control type=\"text\"\r\n            value={alias}\r\n            placeholder=\"Псевдоним\"\r\n            onChange={event => setAlias(event.target.value)}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"img\">\r\n          <Form.Label>Название изображения</Form.Label>\r\n          <Form.Control type=\"text\"\r\n            placeholder=\"Название изображения\"\r\n            value={img}\r\n            onChange={event => setImg(event.target.value)}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"preview\">\r\n          <Form.Label>Краткое описание</Form.Label>\r\n          <Form.Control as=\"textarea\"\r\n            rows=\"12\"\r\n            placeholder=\"Краткое описание\"\r\n            value={preview}\r\n            onChange={event => setPreview(event.target.value)}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"description\">\r\n          <Form.Label>Описание</Form.Label>\r\n          <Form.Control as=\"textarea\"\r\n            rows=\"12\"\r\n            placeholder=\"Описание\"\r\n            value={description}\r\n            onChange={event => setDescription(event.target.value)}\r\n          />\r\n        </Form.Group>\r\n\r\n        <div className=\"d-flex justify-content-center\">\r\n          <Button variant=\"outline-success\"\r\n            type=\"submit\"\r\n            size=\"lg\"\r\n            className=\"mx-2\"\r\n            onClick={() => {\r\n              modalCallback.current = promptHandler\r\n              setShowModal(true)\r\n            }}\r\n          >\r\n            Сохранить\r\n        </Button>\r\n\r\n          {\r\n            removingEndPoint &&\r\n            <Button variant=\"outline-danger\"\r\n              type=\"button\"\r\n              size=\"lg\"\r\n              className=\"mx-2\"\r\n              onClick={() => {\r\n                modalCallback.current = deletingHandler\r\n                setShowModal(true)\r\n              }}\r\n            >\r\n              Удалить\r\n        </Button>\r\n          }\r\n        </div>\r\n      </Form>\r\n      : <ModalPrompt isShowing={showModal}\r\n        acceptHandler={modalCallback.current}\r\n        cancelHandler={closeHandler}\r\n      />\r\n  )\r\n}","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport withCategoriesState from '../hoc/withCategoriesState'\r\n\r\nimport Loader from '../components/Loader'\r\nimport EditCategoryForm from '../components/EditCategoryForm'\r\n\r\nconst EditCategory = ({ categories, match }) => {\r\n  const category = categories.find(c => c.alias === match.params.alias)\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"text-center\">Редактирование категории</h2>\r\n      <hr />\r\n      {\r\n        category\r\n          ? <EditCategoryForm category={category}\r\n            endPoint=\"/categories/update\"\r\n            removingEndPoint=\"/categories/remove\"\r\n          />\r\n          : <Loader />\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default withCategoriesState(withRouter(EditCategory)) ","import React from 'react'\r\nimport EditCategoryForm from '../components/EditCategoryForm'\r\n\r\nexport default () => {\r\n  return (\r\n    <>\r\n      <h2 className=\"text-center\">Новая категория</h2>\r\n      <hr />\r\n      <EditCategoryForm endPoint=\"/categories\" />\r\n    </>\r\n  )\r\n}","import React from 'react'\r\nimport EditTaskForm from '../components/EditTaskForm'\r\nimport withCategoriesState from '../hoc/withCategoriesState'\r\n\r\nconst CreateTask = ({ categories }) => {\r\n  return (\r\n    <>\r\n      <h2 className=\"text-center\">Новая задача</h2>\r\n      <hr />\r\n      <EditTaskForm categories={categories} endPoint=\"/tasks\" />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default withCategoriesState(CreateTask)","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { ListGroup, ListGroupItem } from 'react-bootstrap'\r\n\r\nconst MenuItem = ({ to, children }) => (\r\n  <NavLink to={to}>\r\n    <ListGroupItem className=\"mb-2 text-dark list-group-item-action\">{children}</ListGroupItem>\r\n  </NavLink>\r\n)\r\n\r\nexport default () => (\r\n  <>\r\n    <h2 className=\"text-center\">Домашняя страница</h2>\r\n    <hr/>\r\n    <h5 className=\"text-info\">Задачи</h5>\r\n    <ListGroup className=\"mb-3\">\r\n      <MenuItem to=\"/tasks/\">Все задачи</MenuItem>\r\n      <MenuItem to=\"/tasks/create\">Добавить задачу</MenuItem>\r\n    </ListGroup>\r\n\r\n    <h5 className=\"text-info\">Категории</h5>\r\n    <ListGroup>\r\n      <MenuItem to=\"/categories/\">Все категории</MenuItem>\r\n      <MenuItem to=\"/categories/create\">Добавить категорию</MenuItem>\r\n    </ListGroup>\r\n  </>\r\n)","import React from 'react'\nimport { Switch, Route, Redirect } from 'react-router-dom'\n\nimport Layout from './components/Layout'\n\nimport TasksList from './pages/TasksList'\nimport CategoriesList from './pages/CategoriesList'\nimport EditTask from './pages/EditTask'\nimport EditCategory from './pages/EditCategory'\nimport CreateCategory from './pages/CreateCategory'\nimport CreateTask from './pages/CreateTask'\nimport Home from './pages/Home'\n\nexport const App = () => {\n  return (\n    <Layout>\n      <Switch>\n        <Route exact\n          path=\"/tasks\"\n          component={TasksList}\n        />\n        <Route exact \n          path=\"/tasks/create\"\n          component={CreateTask}\n        />\n        <Route exact\n          path=\"/tasks/:id\"\n          component={EditTask}\n        />\n        <Route exact\n          path=\"/categories\"\n          component={CategoriesList}\n        />\n        <Route exact\n          path=\"/categories/create\"\n          component={CreateCategory} \n        />\n        <Route exact \n          path=\"/categories/:alias\"\n          component={EditCategory}\n        />\n        <Route exact \n          path=\"/home\"\n          component={Home}\n        />\n        <Redirect to=\"/home\" />\n      </Switch>\n    </Layout>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport './index.scss'\nimport { App } from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\nserviceWorker.unregister()\n"],"sourceRoot":""}